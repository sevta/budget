// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Budget {
  id          String   @id @default(cuid())
  name        String
  price       Int
  description String
  status      Status?  @default(DRAFT)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role?     @default(USER)
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id              String            @id @default(cuid())
  name            String
  description     String?
  createdAt       DateTime          @default(now())
  color           String?
  IncomingPayment IncomingPayment[]
  OutgoingPayment OutgoingPayment[]
  item            Item[]
}

model OutgoingPayment {
  id         String    @id @default(cuid())
  name       String?
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?
  createdAt  DateTime  @default(now())
}

model IncomingPayment {
  id          String    @id @default(cuid())
  name        String?
  description String?
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
  createdAt   DateTime  @default(now())
}

model Item {
  id                String    @id @default(cuid())
  name              String?
  amount            Int
  description       String
  type              ItemType  @default(OUTCOME)
  createdAt         DateTime  @default(now())
  date              DateTime  @default(now())
  incomingPaymentId String?
  category          Category? @relation(fields: [categoryId], references: [id])
  categoryId        String?
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum Status {
  DRAFT
  ARCHIVE
  PENDING
  DONE
}

enum ItemType {
  INCOME
  OUTCOME
  LOAN
}
